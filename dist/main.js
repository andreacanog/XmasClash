/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/board.js":
/*!**********************!*\
  !*** ./src/board.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Board; }\n/* harmony export */ });\n/* harmony import */ var _game_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game.js */ \"./src/game.js\");\nconst balls = [\"Pink\", \"Green\", \"White\", \"Red\", \"Yellow\"];\nconst ballsWithStars = [\"GreenLines\", \"PinkLines\", \"RedLines\", \"YellowLines\", \"WhiteLines\"];\nconst background = new Image();\nbackground.src = \"./images/background.png\";\nconst ballsSource = './images/';\nlet currentBall;\nlet otherBall;\n\nclass Board {\n  constructor() {\n    this.grid = [];\n    this.rows = 9;\n    this.columns = 9;\n    this.score = 0;\n    this.movements = 20;\n    this.updatedByUser = false;\n    this.ballObj = {\n      \"GreenStar.png\": \"Green.png\",\n      \"PinkStar.png\": \"Pink.png\",\n      \"RedStar.png\": \"Red.png\",\n      \"WhiteStar.png\": \"White.png\",\n      \"  YellowStar.png\": \"Yellow.png\"\n    };\n  }\n  startGame() {\n    for (let r = 0; r < this.rows; r++) {\n      let row = [];\n      for (let c = 0; c < this.columns; c++) {\n        let img = document.createElement(\"img\");\n        img.id = r.toString() + \"-\" + c.toString(); // => img id = \"0-0\" \"0-1\" \"0-2\" (position)\n        img.src = ballsSource + this.randomBall() + \".png\"; // =>  \"images/Blue.png\"\n\n        this.makeBallDragable(img);\n        document.getElementById(\"board\").append(img);\n        row.push(img);\n      }\n      // console.log(\"document: \", document)\n      this.grid.push(row); //2D array  [[img, img, img, img, img, img, img, img]]\n    }\n  }\n\n  randomBall() {\n    return balls[Math.floor(Math.random() * balls.length)];\n  }\n  randomBallWithLines() {\n    return ballsWithStars[Math.floor(Math.random() * ballsWithStars.length)];\n  }\n  makeBallDragable(img) {\n    img.addEventListener(\"dragstart\", this.dragStart); //click on the ball => starts the drag proces\n    img.addEventListener(\"dragover\", this.dragOver); //move of the mouse with the ball \n    img.addEventListener(\"dragenter\", this.dragEnter); //dragginf the ball to another ball \n    img.addEventListener(\"dragleave\", this.dragLeave); //leave the ball \n    img.addEventListener(\"drop\", this.dragDrop);\n    img.addEventListener(\"dragend\", this.dragEnd.bind(this));\n  }\n  dragStart() {\n    currentBall = this;\n    //this.updateByUser = true; \n  }\n\n  dragOver(e) {\n    e.preventDefault();\n  }\n  dragEnter(e) {\n    e.preventDefault();\n  }\n  dragLeave(e) {\n    e.preventDefault();\n  }\n  dragDrop() {\n    otherBall = this;\n  }\n  dragEnd() {\n    this.updatedByUser = true;\n    if (currentBall.src.includes(\"blank\") || otherBall.src.includes(\"blank\")) {\n      // check that a ball does not swap with a blank img\n      return;\n    }\n    let currentCoords = currentBall.id.split(\"-\"); // \"0-0\" => ['0','0']\n    let row1 = parseInt(currentCoords[0]); // '0' => 0\n    let column1 = parseInt(currentCoords[1]);\n    let otherCoords = otherBall.id.split(\"-\"); // \"0-0\" => [0,0]\n    let row2 = parseInt(otherCoords[0]); // '0' => 0\n    let column2 = parseInt(otherCoords[1]);\n    let movLeft = column2 === column1 - 1 && row1 === row2;\n    let movRight = column2 === column1 + 1 && row1 === row2;\n    let movUp = row2 === row1 - 1 && column2 === column1;\n    let movDown = row2 === row1 + 1 && column2 === column1;\n    let allowMov = movLeft || movUp || movDown || movRight;\n    if (allowMov) {\n      let currentImg = currentBall.src;\n      let otherImg = otherBall.src;\n\n      //swap images\n      currentBall.src = otherImg;\n      otherBall.src = currentImg;\n      let valid1 = this.validMoveForThree();\n      let valid2 = this.validMoveForFour();\n      let valid3 = this.validMoveForFive();\n      if (!valid3 && !valid2 && !valid1) {\n        let currentImg = currentBall.src;\n        let otherImg = otherBall.src;\n\n        //swap images\n        currentBall.src = otherImg;\n        otherBall.src = currentImg;\n        this.movements += 1;\n      }\n      if (this.updatedByUser) {\n        this.movements -= 1;\n      }\n    }\n    this.updatedByUser = false;\n  }\n  clash() {\n    this.clashFive();\n    this.clashFour();\n    this.clashThree();\n    document.getElementById(\"score\").innerText = this.score; // to get the score \n    document.getElementById(\"movements\").innerText = this.movements;\n  }\n  clashThree() {\n    for (let row = 0; row < this.rows; row++) {\n      for (let col = 0; col < this.columns - 2; col++) {\n        let ball1 = this.grid[row][col];\n        let ball2 = this.grid[row][col + 1];\n        let ball3 = this.grid[row][col + 2];\n        // let haveStar = this.checkIfWeHaveStart(ball1, ball2, ball3);\n        let haveStar = false;\n        let matchingStar = false;\n\n        // check if matching star only if we have a star. \n        // haveStar = this.checkIfWeHaveStart()\n\n        // if (haveStar !== false) {\n        //     matchingStar = this.allowThreeWithStar(ball1, ball2, ball3, haveStar);\n        // }\n\n        // let matchingStart = this.allowThreeWithStar(ball1.src, ball2.src, ball3.src);\n\n        if ((ball1.src === ball2.src && ball2.src === ball3.src || matchingStar) && !ball1.src.includes(\"blank\")) {\n          ball1.src = './images/blank.png';\n          ball2.src = './images/blank.png';\n          ball3.src = './images/blank.png';\n          this.score += 10;\n          this.checkIfGameWonOrLost();\n        }\n      }\n    }\n    for (let col = 0; col < this.rows; col++) {\n      for (let row = 0; row < this.columns - 2; row++) {\n        let ball1 = this.grid[row][col];\n        let ball2 = this.grid[row + 1][col];\n        let ball3 = this.grid[row + 2][col];\n        // let haveStar = this.checkIfWeHaveStart(ball1, ball2, ball3);\n        let haveStar = false;\n        let matchingStar = false;\n\n        // if (haveStar !== false) {\n        //     matchingStar = this.allowThreeWithStar(ball1, ball2, ball3, haveStar);\n        // }\n\n        if ((ball1.src === ball2.src && ball2.src === ball3.src || matchingStar) && !ball1.src.includes(\"blank\")) {\n          ball1.src = './images/blank.png';\n          ball2.src = './images/blank.png';\n          ball3.src = './images/blank.png';\n          this.score += 10;\n          // this.movements -= 1;\n          this.checkIfGameWonOrLost();\n        }\n      }\n    }\n  }\n  clashFour() {\n    for (let row = 0; row < this.rows; row++) {\n      for (let col = 0; col < this.columns - 3; col++) {\n        let ball1 = this.grid[row][col];\n        let ball2 = this.grid[row][col + 1];\n        let ball3 = this.grid[row][col + 2];\n        let ball4 = this.grid[row][col + 3];\n        if (ball1.src === ball2.src && ball2.src === ball3.src && ball3.src === ball4.src && !ball1.src.includes(\"blank\")) {\n          ball1.src = './images/blank.png';\n          ball2.src = './images/blank.png';\n          ball3.src = './images/blank.png';\n          ball4.src = ballsSource + this.randomBallWithLines() + \".png\";\n          this.score += 20;\n          this.checkIfGameWonOrLost();\n        }\n      }\n    }\n    for (let col = 0; col < this.rows; col++) {\n      for (let row = 0; row < this.columns - 3; row++) {\n        let ball1 = this.grid[row][col];\n        let ball2 = this.grid[row + 1][col];\n        let ball3 = this.grid[row + 2][col];\n        let ball4 = this.grid[row + 3][col];\n        if (ball1.src === ball2.src && ball2.src === ball3.src && ball3.src === ball4.src && !ball1.src.includes(\"blank\")) {\n          ball1.src = './images/blank.png';\n          ball2.src = './images/blank.png';\n          ball3.src = './images/blank.png';\n          ball4.src = ballsSource + this.randomBallWithLines() + \".png\";\n          this.score += 20;\n          this.checkIfGameWonOrLost();\n        }\n      }\n    }\n  }\n  clashFive() {\n    for (let row = 0; row < this.rows; row++) {\n      for (let col = 0; col < this.columns - 4; col++) {\n        let ball1 = this.grid[row][col];\n        let ball2 = this.grid[row][col + 1];\n        let ball3 = this.grid[row][col + 2];\n        let ball4 = this.grid[row][col + 3];\n        let ball5 = this.grid[row][col + 4];\n        if (ball1.src === ball2.src && ball2.src === ball3.src && ball3.src === ball4.src && ball4.src === ball5.src && !ball1.src.includes(\"blank\")) {\n          ball1.src = './images/blank.png';\n          ball2.src = './images/blank.png';\n          ball3.src = './images/blank.png';\n          ball4.src = './images/blank.png';\n          ball5.src = './images/blank.png';\n          this.score += 30;\n          this.checkIfGameWonOrLost();\n        }\n      }\n    }\n    for (let col = 0; col < this.rows; col++) {\n      for (let row = 0; row < this.columns - 4; row++) {\n        let ball1 = this.grid[row][col];\n        let ball2 = this.grid[row + 1][col];\n        let ball3 = this.grid[row + 2][col];\n        let ball4 = this.grid[row + 3][col];\n        let ball5 = this.grid[row + 4][col];\n        if (ball1.src === ball2.src && ball2.src === ball3.src && ball3.src === ball4.src && ball4.src === ball5.src && !ball1.src.includes(\"blank\")) {\n          ball1.src = './images/blank.png';\n          ball2.src = './images/blank.png';\n          ball3.src = './images/blank.png';\n          ball4.src = './images/blank.png';\n          ball5.src = './images/blank.png';\n          this.score += 30;\n          this.checkIfGameWonOrLost();\n        }\n      }\n    }\n  }\n  validMoveForThree() {\n    for (let row = 0; row < this.rows; row++) {\n      for (let col = 0; col < this.columns - 2; col++) {\n        let ball1 = this.grid[row][col];\n        let ball2 = this.grid[row][col + 1];\n        let ball3 = this.grid[row][col + 2];\n        // let haveStar = this.checkIfWeHaveStart(ball1, ball2, ball3);\n        let haveStar = false;\n        let matchingStar = false;\n\n        // if (haveStar !== false) {\n        //     matchingStar = this.allowThreeWithStar(ball1, ball2, ball3, haveStar);\n        // }\n\n        if ((ball1.src === ball2.src && ball2.src === ball3.src || matchingStar) && !ball1.src.includes(\"blank\")) {\n          return true;\n        }\n      }\n    }\n    for (let col = 0; col < this.rows; col++) {\n      for (let row = 0; row < this.columns - 2; row++) {\n        let ball1 = this.grid[row][col];\n        let ball2 = this.grid[row + 1][col];\n        let ball3 = this.grid[row + 2][col];\n        // let haveStar = this.checkIfWeHaveStart(ball1, ball2, ball3);\n        let haveStar = false;\n        let matchingStar = false;\n\n        // if (haveStar !== false) {\n        //     matchingStar = this.allowThreeWithStar(ball1, ball2, ball3, haveStar);\n        // }\n\n        if ((ball1.src === ball2.src && ball2.src === ball3.src || matchingStar) && !ball1.src.includes(\"blank\")) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  validMoveForFour() {\n    for (let row = 0; row < this.rows; row++) {\n      for (let col = 0; col < this.columns - 3; col++) {\n        let ball1 = this.grid[row][col];\n        let ball2 = this.grid[row][col + 1];\n        let ball3 = this.grid[row][col + 2];\n        let ball4 = this.grid[row][col + 3];\n        if (ball1.src === ball2.src && ball2.src === ball3.src && ball3.src === ball4.src && !ball1.src.includes(\"blank\")) {\n          return true;\n        }\n      }\n    }\n    for (let col = 0; col < this.rows; col++) {\n      for (let row = 0; row < this.columns - 3; row++) {\n        let ball1 = this.grid[row][col];\n        let ball2 = this.grid[row + 1][col];\n        let ball3 = this.grid[row + 2][col];\n        let ball4 = this.grid[row + 3][col];\n        if (ball1.src === ball2.src && ball2.src === ball3.src && ball3.src === ball4.src && !ball1.src.includes(\"blank\")) {\n          return true;\n        }\n      }\n    }\n  }\n  validMoveForFive() {\n    for (let row = 0; row < this.rows; row++) {\n      for (let col = 0; col < this.columns - 4; col++) {\n        let ball1 = this.grid[row][col];\n        let ball2 = this.grid[row][col + 1];\n        let ball3 = this.grid[row][col + 2];\n        let ball4 = this.grid[row][col + 3];\n        let ball5 = this.grid[row][col + 4];\n        if (ball1.src === ball2.src && ball2.src === ball3.src && ball3.src === ball4.src && ball4.src === ball5.src && !ball1.src.includes(\"blank\")) {\n          return true;\n        }\n      }\n    }\n    for (let col = 0; col < this.rows; col++) {\n      for (let row = 0; row < this.columns - 4; row++) {\n        let ball1 = this.grid[row][col];\n        let ball2 = this.grid[row + 1][col];\n        let ball3 = this.grid[row + 2][col];\n        let ball4 = this.grid[row + 3][col];\n        let ball5 = this.grid[row + 4][col];\n        if (ball1.src === ball2.src && ball2.src === ball3.src && ball3.src === ball4.src && ball4.src === ball5.src && !ball1.src.includes(\"blank\")) {\n          return true;\n        }\n      }\n    }\n  }\n  slideDownBall() {\n    for (let col = 0; col < this.columns; col++) {\n      // column 0 \n      let idx = this.rows - 1; // idx = 8\n      for (let row = this.columns - 1; row >= 0; row--) {\n        // start at column 0 row 8\n\n        if (!this.grid[row][col].src.includes(\"blank\")) {\n          // we only care about img that are blank \n          this.grid[idx][col].src = this.grid[row][col].src; // set the img that is blank with the next that is not \n          idx -= 1;\n        }\n      }\n      for (let row = idx; row >= 0; row--) {\n        // idx = last position there was an img that was shifted down so now it has to be blank \n        this.grid[row][col].src = './images/blank.png';\n      }\n    }\n  }\n  populateBall() {\n    for (let col = 0; col < this.columns; col++) {\n      if (this.grid[0][col].src.includes(\"blank\")) {\n        this.grid[0][col].src = ballsSource + this.randomBall() + \".png\";\n      }\n    }\n  }\n  checkIfGameWonOrLost() {\n    this.gameOver();\n    this.gameWon();\n  }\n  gameOver() {\n    if (this.movements === 0) {\n      document.getElementById(\"gameOver\").style.display = \"block\";\n    }\n  }\n  gameWon() {\n    if (this.score >= 100) {\n      document.getElementById(\"gameWon\").style.display = \"block\";\n    }\n  }\n\n  // checkIfWeHaveStart(ball1, ball2, ball3) {\n  //     console.log(\"checkIfWeHaveStart\");\n  //     let balls = [ball1, ball2, ball3];\n  //     for (let i = 0; i < balls.length; i++) {\n  //         let ball = balls[i].src.split(\"/\")[8];\n  //         console.log(\"in checkIfWeHaveStart ball: \", ball);\n  //         if (this.ballObj[ball] !== undefined) {\n  //             return [ball, i];\n  //         }\n  //     }\n  //     return false;\n  // }\n\n  // allowThreeWithStar(ball1, ball2, ball3, hasStar) {\n  //     console.log(\"hit allowThreeWithStar \");\n  //     // let ballObj = { \"GreenStar.png\": \"Green.png\", \n  //     //                 \"PinkStar.png\": \"Pink.png\",\n  //     //                  \"RedStar.png\": \"Red.png\", \n  //     //                  \"WhiteStar.png\": \"White.png\", \n  //     //                  \"YellowStar.png\": \"Yellow.png\"\n  //     //             }\n\n  //     let arr = [ball1, ball2, ball3]\n  //     let newArr = [];\n  //     for (let i = 0; i < arr.length; i++) {\n  //         let currBall = arr[i].src.split(\"/\")[8];\n  //         newArr.push(currBall);\n  //     }\n  //     newArr[hasStar[1]] = hasStar[0];\n  //     // let starIdx;\n  //     // let starBall = arr.forEach((ball, idx) => {\n  //     //     let currentBall = ball.split(\"/\")[8];\n  //     //     console.log(\"currentBall: \", currentBall);\n  //     //     console.log(\"inside each - ball: \", ball)\n  //     //     if (this.ballObj[currentBall] !== undefined) {\n  //     //         console.log(\"inside the each and if\");\n  //     //         starIdx = idx;\n  //     //         return currentBall;\n  //     //     }\n  //     // });\n  //     // console.log(\"starBall: \", starBall);\n  //     // console.log(\"starIdx: \", starIdx)\n  //     // let coloredBall = this.ballObj[starBall];\n  //     // // if (coloredBall == ball2 && coloredBall == )\n  //     // arr[starIdx] = coloredBall;\n  //     return newArr[0] === newArr[1] && newArr[1] === newArr[2];\n\n  // }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/board.js\n");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Game; }\n/* harmony export */ });\n/* harmony import */ var _board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board */ \"./src/board.js\");\n\nclass Game {\n\n  // constructor(canvas) {\n  //     // this.ctx = canvas.getContext(\"2d\");\n  //     // this.dimensions = { width: canvas.width, height: canvas.height };\n  //     this.restart();\n  // }\n\n  // restart() {\n\n  // }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQjtBQUVaLE1BQU1DLElBQUksQ0FBQzs7RUFFdEI7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7RUFFQTs7RUFFQTtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veG1hc2NsYXNoLy4vc3JjL2dhbWUuanM/N2RlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQm9hcmQgZnJvbSBcIi4vYm9hcmRcIlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lIHtcblxuICAgIC8vIGNvbnN0cnVjdG9yKGNhbnZhcykge1xuICAgIC8vICAgICAvLyB0aGlzLmN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gICAgLy8gICAgIC8vIHRoaXMuZGltZW5zaW9ucyA9IHsgd2lkdGg6IGNhbnZhcy53aWR0aCwgaGVpZ2h0OiBjYW52YXMuaGVpZ2h0IH07XG4gICAgLy8gICAgIHRoaXMucmVzdGFydCgpO1xuICAgIC8vIH1cblxuICAgIC8vIHJlc3RhcnQoKSB7XG5cbiAgICAvLyB9XG5cblxuXG5cblxuXG59Il0sIm5hbWVzIjpbIkJvYXJkIiwiR2FtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/game.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/board.js\");\n\n// import Game from './game.js'\n\nwindow.onload = function () {\n  let startGameModal = document.getElementById(\"startGameModal\");\n  let backgroundMusic = document.getElementById(\"music-element\");\n  let musicSwitch = document.getElementById(\"music-switch\");\n  let gameWonModal = document.getElementById(\"gameWon\");\n  let gameOverModal = document.getElementById(\"gameOver\");\n  const board = new _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  document.addEventListener(\"click\", event => {\n    if (event.target.classList.contains(\"gamePlay\")) {\n      startGameModal.style.display = \"none\";\n      backgroundMusic.play();\n      board.startGame();\n      window.setInterval(function () {\n        board.clash();\n        board.slideDownBall();\n        board.populateBall();\n      }, 30);\n    }\n  });\n  musicSwitch.addEventListener(\"click\", () => {\n    if (backgroundMusic.paused) {\n      backgroundMusic.play();\n      musicSwitch.src = \"./images/pause.png\";\n    } else {\n      backgroundMusic.pause();\n      musicSwitch.src = \"./images/start.png\";\n    }\n  });\n  let intructionsButton = document.getElementById(\"gameInstructions\");\n  let instructionsContainer = document.getElementById(\"instructions-div\");\n  intructionsButton.addEventListener('mouseover', function handleMouseOver() {\n    instructionsContainer.style.display = 'block';\n  });\n  intructionsButton.addEventListener('mouseout', function handleMouseOut() {\n    instructionsContainer.style.display = 'none';\n  });\n  document.addEventListener(\"click\", event => {\n    if (event.target.classList.contains(\"restart\")) {\n      if (gameWonModal.style.display === \"block\") {\n        gameWonModal.style.display = \"none\";\n      } else if (gameOverModal.style.display === \"block\") {\n        gameOverModal.style.display = \"none\";\n      }\n      board.score = 0;\n      board.movements = 20;\n    }\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBOEI7QUFDOUI7O0FBR0FDLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHLFlBQVk7RUFDeEIsSUFBSUMsY0FBYyxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQztFQUM5RCxJQUFJQyxlQUFlLEdBQUdGLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLGVBQWUsQ0FBQztFQUM5RCxJQUFJRSxXQUFXLEdBQUdILFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLGNBQWMsQ0FBQztFQUV6RCxJQUFJRyxZQUFZLEdBQUdKLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLFNBQVMsQ0FBQztFQUNyRCxJQUFJSSxhQUFhLEdBQUdMLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLFVBQVUsQ0FBQztFQUN2RCxNQUFNSyxLQUFLLEdBQUcsSUFBSVYsaURBQUssRUFBRTtFQUN6QkksUUFBUSxDQUFDTyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUdDLEtBQUssSUFBSztJQUUxQyxJQUFJQSxLQUFLLENBQUNDLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDQyxRQUFRLENBQUMsVUFBVSxDQUFDLEVBQUM7TUFDNUNaLGNBQWMsQ0FBQ2EsS0FBSyxDQUFDQyxPQUFPLEdBQUcsTUFBTTtNQUVyQ1gsZUFBZSxDQUFDWSxJQUFJLEVBQUU7TUFFdEJSLEtBQUssQ0FBQ1MsU0FBUyxFQUFFO01BQ2pCbEIsTUFBTSxDQUFDbUIsV0FBVyxDQUFFLFlBQVc7UUFDM0JWLEtBQUssQ0FBQ1csS0FBSyxFQUFFO1FBQ2JYLEtBQUssQ0FBQ1ksYUFBYSxFQUFFO1FBQ3JCWixLQUFLLENBQUNhLFlBQVksRUFBRTtNQUN4QixDQUFDLEVBQUUsRUFBRSxDQUFDO0lBQ1Y7RUFDSixDQUFDLENBQUM7RUFFRmhCLFdBQVcsQ0FBQ0ksZ0JBQWdCLENBQUMsT0FBTyxFQUFFLE1BQU07SUFFeEMsSUFBSUwsZUFBZSxDQUFDa0IsTUFBTSxFQUFFO01BQ3hCbEIsZUFBZSxDQUFDWSxJQUFJLEVBQUU7TUFDdEJYLFdBQVcsQ0FBQ2tCLEdBQUcsR0FBRyxvQkFBb0I7SUFFMUMsQ0FBQyxNQUFNO01BQ0huQixlQUFlLENBQUNvQixLQUFLLEVBQUU7TUFDdkJuQixXQUFXLENBQUNrQixHQUFHLEdBQUcsb0JBQW9CO0lBQzFDO0VBQ0osQ0FBQyxDQUFDO0VBRUYsSUFBSUUsaUJBQWlCLEdBQUd2QixRQUFRLENBQUNDLGNBQWMsQ0FBQyxrQkFBa0IsQ0FBQztFQUNuRSxJQUFJdUIscUJBQXFCLEdBQUd4QixRQUFRLENBQUNDLGNBQWMsQ0FBQyxrQkFBa0IsQ0FBQztFQUd2RXNCLGlCQUFpQixDQUFDaEIsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLFNBQVNrQixlQUFlLEdBQUc7SUFDdkVELHFCQUFxQixDQUFDWixLQUFLLENBQUNDLE9BQU8sR0FBRyxPQUFPO0VBQy9DLENBQUMsQ0FBQztFQUVKVSxpQkFBaUIsQ0FBQ2hCLGdCQUFnQixDQUFDLFVBQVUsRUFBRSxTQUFTbUIsY0FBYyxHQUFHO0lBQ3JFRixxQkFBcUIsQ0FBQ1osS0FBSyxDQUFDQyxPQUFPLEdBQUcsTUFBTTtFQUNoRCxDQUFDLENBQUM7RUFFRmIsUUFBUSxDQUFDTyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUdDLEtBQUssSUFBSztJQUMxQyxJQUFJQSxLQUFLLENBQUNDLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDQyxRQUFRLENBQUMsU0FBUyxDQUFDLEVBQUM7TUFDM0MsSUFBSVAsWUFBWSxDQUFDUSxLQUFLLENBQUNDLE9BQU8sS0FBSyxPQUFPLEVBQUU7UUFDeENULFlBQVksQ0FBQ1EsS0FBSyxDQUFDQyxPQUFPLEdBQUcsTUFBTTtNQUN2QyxDQUFDLE1BQU0sSUFBSVIsYUFBYSxDQUFDTyxLQUFLLENBQUNDLE9BQU8sS0FBSyxPQUFPLEVBQUU7UUFDaERSLGFBQWEsQ0FBQ08sS0FBSyxDQUFDQyxPQUFPLEdBQUcsTUFBTTtNQUN4QztNQUVBUCxLQUFLLENBQUNxQixLQUFLLEdBQUcsQ0FBQztNQUNmckIsS0FBSyxDQUFDc0IsU0FBUyxHQUFHLEVBQUU7SUFDeEI7RUFDSixDQUFDLENBQUM7QUFDTixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veG1hc2NsYXNoLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJvYXJkIGZyb20gJy4vYm9hcmQuanMnXG4vLyBpbXBvcnQgR2FtZSBmcm9tICcuL2dhbWUuanMnXG5cblxud2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgc3RhcnRHYW1lTW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN0YXJ0R2FtZU1vZGFsXCIpO1xuICAgIGxldCBiYWNrZ3JvdW5kTXVzaWMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm11c2ljLWVsZW1lbnRcIik7XG4gICAgbGV0IG11c2ljU3dpdGNoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtdXNpYy1zd2l0Y2hcIilcblxuICAgIGxldCBnYW1lV29uTW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdhbWVXb25cIik7XG4gICAgbGV0IGdhbWVPdmVyTW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdhbWVPdmVyXCIpO1xuICAgIGNvbnN0IGJvYXJkID0gbmV3IEJvYXJkKClcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XG4gICAgICAgIFxuICAgICAgICBpZiAoZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImdhbWVQbGF5XCIpKXtcbiAgICAgICAgICAgIHN0YXJ0R2FtZU1vZGFsLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcblxuICAgICAgICAgICAgYmFja2dyb3VuZE11c2ljLnBsYXkoKVxuICAgICAgICAgIFxuICAgICAgICAgICAgYm9hcmQuc3RhcnRHYW1lKCk7XG4gICAgICAgICAgICB3aW5kb3cuc2V0SW50ZXJ2YWwoIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGJvYXJkLmNsYXNoKCk7XG4gICAgICAgICAgICAgICAgYm9hcmQuc2xpZGVEb3duQmFsbCgpO1xuICAgICAgICAgICAgICAgIGJvYXJkLnBvcHVsYXRlQmFsbCgpO1xuICAgICAgICAgICAgfSwgMzApXG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIG11c2ljU3dpdGNoLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG5cbiAgICAgICAgaWYgKGJhY2tncm91bmRNdXNpYy5wYXVzZWQpIHtcbiAgICAgICAgICAgIGJhY2tncm91bmRNdXNpYy5wbGF5KCk7XG4gICAgICAgICAgICBtdXNpY1N3aXRjaC5zcmMgPSBcIi4vaW1hZ2VzL3BhdXNlLnBuZ1wiXG4gICAgXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kTXVzaWMucGF1c2UoKTtcbiAgICAgICAgICAgIG11c2ljU3dpdGNoLnNyYyA9IFwiLi9pbWFnZXMvc3RhcnQucG5nXCJcbiAgICAgICAgfVxuICAgIH0pXG5cbiAgICBsZXQgaW50cnVjdGlvbnNCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdhbWVJbnN0cnVjdGlvbnNcIik7XG4gICAgbGV0IGluc3RydWN0aW9uc0NvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW5zdHJ1Y3Rpb25zLWRpdlwiKTtcblxuXG4gICAgaW50cnVjdGlvbnNCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgZnVuY3Rpb24gaGFuZGxlTW91c2VPdmVyKCkge1xuICAgICAgICBpbnN0cnVjdGlvbnNDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICB9KTtcbiAgICAgIFxuICAgIGludHJ1Y3Rpb25zQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3V0JywgZnVuY3Rpb24gaGFuZGxlTW91c2VPdXQoKSB7XG4gICAgICAgIGluc3RydWN0aW9uc0NvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIH0pO1xuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgICAgICBpZiAoZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInJlc3RhcnRcIikpe1xuICAgICAgICAgICAgaWYgKGdhbWVXb25Nb2RhbC5zdHlsZS5kaXNwbGF5ID09PSBcImJsb2NrXCIpIHtcbiAgICAgICAgICAgICAgICBnYW1lV29uTW9kYWwuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChnYW1lT3Zlck1vZGFsLnN0eWxlLmRpc3BsYXkgPT09IFwiYmxvY2tcIikge1xuICAgICAgICAgICAgICAgIGdhbWVPdmVyTW9kYWwuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICBib2FyZC5zY29yZSA9IDA7XG4gICAgICAgICAgICBib2FyZC5tb3ZlbWVudHMgPSAyMDtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbIkJvYXJkIiwid2luZG93Iiwib25sb2FkIiwic3RhcnRHYW1lTW9kYWwiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiYmFja2dyb3VuZE11c2ljIiwibXVzaWNTd2l0Y2giLCJnYW1lV29uTW9kYWwiLCJnYW1lT3Zlck1vZGFsIiwiYm9hcmQiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJ0YXJnZXQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInN0eWxlIiwiZGlzcGxheSIsInBsYXkiLCJzdGFydEdhbWUiLCJzZXRJbnRlcnZhbCIsImNsYXNoIiwic2xpZGVEb3duQmFsbCIsInBvcHVsYXRlQmFsbCIsInBhdXNlZCIsInNyYyIsInBhdXNlIiwiaW50cnVjdGlvbnNCdXR0b24iLCJpbnN0cnVjdGlvbnNDb250YWluZXIiLCJoYW5kbGVNb3VzZU92ZXIiLCJoYW5kbGVNb3VzZU91dCIsInNjb3JlIiwibW92ZW1lbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94bWFzY2xhc2gvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;